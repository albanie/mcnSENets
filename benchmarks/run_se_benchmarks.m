function run_se_benchmarks(varargin)
% RUN_SE_BENCHMARKS do a single pass over the imagenet validation data
%
% Copyright (C) 2017 Samuel Albanie
% Licensed under The MIT License [see LICENSE.md for details]

  opts.gpus = 1 ;
  opts.batchSize = 32 ;
  opts.useCached = 1 ; % load results from cache if available
  opts.labelFormat = 'v1' ; % Different models were trained with different label orders
  opts = vl_argparse(opts, varargin) ;

  % try out different models
  %'SE-ResNet50-v2-mcn', ...
  %'SE-ResNet-50-mcn', ...
  %'SE-BN-Inception-mcn', ...
  %'SE-ResNet-101-mcn', ...
  %'SE-ResNet-152-mcn', ...
  %'SE-ResNeXt-50-32x4d-mcn', ...
  %'SE-ResNeXt-101-32x4d-mcn', ...
  %'SENet-mcn', ...
  importedModels = {
    'mcn-mobilenet', ...
  } ;

  v2Models = {...
      'mcn-mobilenet', ...
      'SE-ResNet50-v2-mcn', ...
  } ;

  for ii = 1:numel(importedModels)
    model = importedModels{ii} ;
    if ismember(model, v2Models)
      labelFormat = 'v2' ;
    else
      labelFormat = opts.labelFormat ;
    end
    imagenet_eval(model, opts.batchSize, opts.gpus, opts.useCached, ...
                  labelFormat) ;
  end

% ---------------------------------------------------------------------
function imagenet_eval(model, batchSize, gpus, useCached, labelFormat)
% ---------------------------------------------------------------------
  [~,info] = cnn_imagenet_se_mcn('model', model, 'batchSize', ...
                 batchSize, 'gpus', gpus, 'continue', useCached, ...
                 'labelFormat', labelFormat) ;
  top1 = info.val.top1err * 100 ; top5 = info.val.top5err * 100 ;
  fprintf('%s: top-1: %.2f, top-5: %.2f\n', model, top1, top5) ;
